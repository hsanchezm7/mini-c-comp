(%
	#include "ListaSimbolos.h"
	Lista tabSimb;
	Tipo tipo;
	int contCadenas=0;
%)
	
program : { tabSimb=crealS(); } IDEN PARI PARD ALLAVE declarations statement_list CLLAVE { imprimirTS(tabSimb); liberaLS(tabSimb); }

delarations : declarations VAR { tipo=VARIABLE; } identifier_list PTOCOMA
            | declarations CONST { tipo=CONSTANTE; } identifier_list PTOCOMA
            | /* lambda */
            ;
            
identifier_list : identifier
                | identifier_list coma identifier
                ;

identifier : IDEN                       { if !(perteneceTS($1)) insertarTS($1,tipo);
                                          else printf("ERROR. Identificador $s ya declarado", $s1); }
            | IDEN IGUAL expression       { if !(perteneceTS($1)) insertarTS($1,tipo);
                                          else printf("ERROR. Identificador $s ya declarado", $s1); }
           ;
           
statement_list : statement_list statement
               | /* lambda */
               ;
               
statement : IDEN IGUAL expression PTOCOMA       { if !(perteneceTS($1)) printf("ERROR. Identificador no declarado");
                                                    else if esConstante($1) printf("ERROR. Asignación a constante"); }
          | ALLAVE statement_list CLLAVE
          | if PARI expression PARD statement else statement
          | if PARI expression PARD statement
          | while PARI expression PARD statement
          | print PARI print_list PARD PTOCOMA
          | read PARI read_list PARD PTOCOMA
          ;
          
print_list : print_item
            | print_list COMA print_item
            ;
            
print_item : expression
           | STRING             { ïnsertarTS($1,CADENA); contCadenas++; }
           
read_list : IDEN                {} 
          | read_list COMA IDEN
          ;

expression : ID { if !(perteneceTS($s1)) printf("Variable %s no declarada \n", $s1)}
